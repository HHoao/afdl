package lc_402;

import java.util.ArrayDeque;
import java.util.Deque;

/*
 *@author: 黄豪
 *@date : 2022年1月21日
 *@todo:402. 移掉 K 位数字
给你一个以字符串表示的非负整数 num 和一个整数 k ，移除这个数中的 k 位数字，使得剩下的数字最小。请你以字符串形式返回这个最小的数字。

 
示例 1 ：

输入：num = "1432219", k = 3
输出："1219"
解释：移除掉三个数字 4, 3, 和 2 形成一个新的最小的数字 1219 。
示例 2 ：

输入：num = "10200", k = 1
输出："200"
解释：移掉首位的 1 剩下的数字为 200. 注意输出不能有任何前导零。
*/
public class LC_402 {

}
//单调栈
class Solution {
    public String removeKdigits(String num, int k) {
        Deque<Character> deque = new ArrayDeque<>();
        int curMoveCount = 0, n = num.length();
        char[] numArr = num.toCharArray();
        for (int i = 0; i < n; i++){
            while (!deque.isEmpty() && deque.peek() > numArr[i] && curMoveCount < k){
                curMoveCount++;
                deque.pop();
            }
            deque.push(numArr[i]);
        }
        while (curMoveCount < k){
            deque.pop();
            curMoveCount++;
        }
        StringBuffer sb = new StringBuffer();
        while (!deque.isEmpty()){
            sb.append(deque.pop());
        }
        sb.reverse();
        while (sb.length() > 0 && sb.charAt(0) == '0') sb.deleteCharAt(0);
        return sb.length() == 0 ? "0" : sb.toString();
    }
}