package lc_143;

import tools.ListNode;

/**
 * @author 黄豪
 *143. 重排链表
给定一个单链表 L：L0→L1→…→Ln-1→Ln ，
将其重新排列后变为： L0→Ln→L1→Ln-1→L2→Ln-2→…

你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。
 */
public class LC_143 {

}
//我的代码
class Solution {
    public void reorderList(ListNode head) {
        ListNode slow = head;
        ListNode quick = head;
        while (quick.next != null && quick.next.next != null){
            quick = quick.next.next;
            slow = slow.next;
        }
        ListNode post = recoverList(slow.next);
        while (head != slow){
            ListNode next= head.next;
            ListNode postnext =post.next;
            head.next = post;
            post.next = next;
            head = next;
            post = postnext;
        }
        head.next = post;
        if (post != null) post.next = null;
    }
    public ListNode recoverList(ListNode head){
        ListNode prev=  null;
        while (head != null){
            ListNode next = head.next;
            head.next = prev;
            prev = head;
            head = next;
        }
        return prev;
    }
}